// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
//
// xs pyramid [Color]
//
// xs_begin
// author : '@lachlanmcdonald'
// arg : { id = '0'  name = 'Color'  value = '1'  range = '0 255'  step = '1'  decimal = '0' }
// xs_end

vec2 vol = vec2(i_volume_size.xy - 1.0);
bvec3 axis = equal(i_axis, vec3(1.0, 1.0, 1.0));
bool no_axis_mode = all(equal(ivec3(i_axis), ivec3(0, 0, 0)));

float map(vec3 v) {
	float index = voxel(v);

	if (index == 0.0) {
		if (voxel(vec3(v.x, v.y, v.z - 1.0)) == i_color_index) {
			float t = 0.0;
			float a = 0.0;
			float b = 0.0;

			if (no_axis_mode || axis.x) {
				t += 2.0;
				a = float((v.x == 0.0   ? 0.0 : voxel(vec3(v.x - 1.0, v.y, v.z - 1.0))) == i_color_index) +
					float((v.x == vol.x ? 0.0 : voxel(vec3(v.x + 1.0, v.y, v.z - 1.0))) == i_color_index);
			}

			if (no_axis_mode || axis.y) {
				t += 2.0;
				b = float((v.y == 0.0   ? 0.0 : voxel(vec3(v.x, v.y - 1.0, v.z - 1.0))) == i_color_index) +
					float((v.y == vol.y ? 0.0 : voxel(vec3(v.x, v.y + 1.0, v.z - 1.0))) == i_color_index);
			}

			if ((a + b) == t) {
				if (i_args[0] == 0.0) {
					return i_color_index;
				} else {
					return i_args[0];
				}
			}
		}
	}

	return index;
}
