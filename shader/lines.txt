// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
// 
// xs lines [Color] [Spacing] [Offset]
// 
// xs_begin
// author : '@lachlanmcdonald'
// arg : { id = '0'  name = 'Color'  value = '1'  range = '0 255'  step = '1'  decimal = '0' }
// arg : { id = '1'  name = 'Spacing'  value = '1'  range = '1 127'  step = '1'  decimal = '0' }
// arg : { id = '2'  name = 'Offset'  value = '0'  range = '0 127'  step = '1'  decimal = '0' }
// xs_end

float spacing = max(floor(i_args[1]), 1.0) + 1.0;
float offset = max(floor(i_args[2]), 0.0);

bvec3 axis = equal(i_axis, vec3(1.0, 1.0, 1.0));
bool no_axis_mode = all(equal(i_axis, vec3(0.0, 0.0, 0.0)));

float map(vec3 v) {
	float index = voxel(v);

	if (index == i_color_index) {
		if (no_axis_mode || axis.x) {
			float m = floor(mod(v.x + offset, spacing));

			if (m == 0.0) {
				return i_args[0];
			}
		}
		if (no_axis_mode || axis.y) {
			float m = floor(mod(v.y + offset, spacing));

			if (m == 0.0) {
				return i_args[0];
			}
		}
		if (no_axis_mode || axis.z) {
			float m = floor(mod(v.z + offset, spacing));

			if (m == 0.0) {
				return i_args[0];
			}
		}
	}

	return index;
}
