// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
// 
// xs lines [Color] [Spacing] [Offset]
// 
// xs_begin
// arg : { id = '0'  name = 'Color'  value = '1'  range = '0 255'  step = '1'  decimal = '0' }
// arg : { id = '1'  name = 'Spacing'  value = '1'  range = '1 127'  step = '1'  decimal = '0' }
// arg : { id = '2'  name = 'Offset'  value = '0'  range = '0 127'  step = '1'  decimal = '0' }
// xs_end

float spacing = max(floor(iArgs[1]), 2.0);
float offset = max(floor(iArgs[2]), 0.0);

bvec3 axis = equal(iAxis, vec3(1.0, 1.0, 1.0));
bool noAxisMode = all(equal(iAxis, vec3(0.0, 0.0, 0.0)));

float map(vec3 v) {
	float index = voxel(v);

	if (index == iColorIndex) {
		if (noAxisMode || axis.x) {
			if (mod(v.x + offset, spacing) == 0.0) {
				return iArgs[0];
			}
		}
		if (noAxisMode || axis.y) {
			if (mod(v.y + offset, spacing) == 0.0) {
				return iArgs[0];
			}
		}
		if (noAxisMode || axis.z) {
			if (mod(v.z + offset, spacing) == 0.0) {
				return iArgs[0];
			}
		}
	}

	return index;
}
