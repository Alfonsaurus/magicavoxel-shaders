// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2018 Lachlan McDonald
//
// v. 0.6.0
// xs py [index]

float map(vec3 v) {
	float x = voxel(v);
	float my = iVolumeSize.x - 1.0;
	float mx = iVolumeSize.y - 1.0;
	bool na = (iAxis.xy == vec2(0.0, 0.0));

	if (x == 0.0) {
		if (voxel(vec3(v.x, v.y, v.z - 1.0)) == iColorIndex) {
			float t = 0.0;
			float a = 0.0;
			float b = 0.0;

			if (na || iAxis.x == 1.0) {
				t += 2.0;
				a = float((v.x == 0.0 ? 0.0 : voxel(vec3(v.x - 1.0, v.y, v.z - 1.0))) == iColorIndex) +
					float((v.x == mx  ? 0.0 : voxel(vec3(v.x + 1.0, v.y, v.z - 1.0))) == iColorIndex);
			}

			if (na || iAxis.y == 1.0) {
				t += 2.0;
				b = float((v.y == 0.0 ? 0.0 : voxel(vec3(v.x, v.y - 1.0, v.z - 1.0))) == iColorIndex) +
					float((v.y == my  ? 0.0 : voxel(vec3(v.x, v.y + 1.0, v.z - 1.0))) == iColorIndex);
			}

			if ((a + b) == t) {
				if (iArgs[0] == 0.0) {
					return iColorIndex;
				} else {
					return iArgs[0];
				}
			}
		}
	}

	return x;
}
