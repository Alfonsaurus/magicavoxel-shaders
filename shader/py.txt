// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
//
// xs py [index]

vec2 vol = vec2(iVolumeSize.xy - 1.0);
bvec3 axis = equal(iAxis, vec3(1.0, 1.0, 1.0));
bool noAxisMode = all(equal(iAxis, vec3(0.0, 0.0, 0.0)));

float map(vec3 v) {
	float index = voxel(v);

	if (index == 0.0) {
		if (voxel(vec3(v.x, v.y, v.z - 1.0)) == iColorIndex) {
			float t = 0.0;
			float a = 0.0;
			float b = 0.0;

			if (noAxisMode || axis.x) {
				t += 2.0;
				a = float((v.x == 0.0   ? 0.0 : voxel(vec3(v.x - 1.0, v.y, v.z - 1.0))) == iColorIndex) +
					float((v.x == vol.x ? 0.0 : voxel(vec3(v.x + 1.0, v.y, v.z - 1.0))) == iColorIndex);
			}

			if (noAxisMode || axis.y) {
				t += 2.0;
				b = float((v.y == 0.0   ? 0.0 : voxel(vec3(v.x, v.y - 1.0, v.z - 1.0))) == iColorIndex) +
					float((v.y == vol.y ? 0.0 : voxel(vec3(v.x, v.y + 1.0, v.z - 1.0))) == iColorIndex);
			}

			if ((a + b) == t) {
				if (iArgs[0] == 0.0) {
					return iColorIndex;
				} else {
					return iArgs[0];
				}
			}
		}
	}

	return index;
}
