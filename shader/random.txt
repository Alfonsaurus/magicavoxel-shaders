// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
// 
// xs random [Threshold] [Color]
// 
// xs_begin
// arg : { id = '0'  name = 'Threshold'  value = '0.5'  range = '0 1'  step = '0.01'  decimal = '1' }
// arg : { id = '1'  name = 'Color'  value = '1'  range = '0 255'  step = '1'  decimal = '0' }
// xs_end

float rand(vec2 co, float seed) {
	return fract(sin(dot(co.xy * seed, vec2(12.9898, 78.233))) * 43758.5453);
}

float map(vec3 v) {
	float index = voxel(v);

	bool na = (i_axis == vec3(0.0, 0.0, 0.0));
	float x = (na || i_axis.x == 1.0) ? v.x : 1.0;
	float y = (na || i_axis.y == 1.0) ? v.y : 1.0;
	float z = (na || i_axis.z == 1.0) ? v.z : 1.0;
	float j = rand(vec2(x, y), i_args[0] + i_iter + 1.0);
	float k = rand(vec2(j, z), i_args[0] + i_iter + 1.0);

	if (index == i_color_index) {
		if (k < i_args[0]) {
			return i_args[1];
		}
	}
	return index;
}
