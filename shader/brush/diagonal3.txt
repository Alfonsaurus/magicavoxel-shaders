// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
//
// xs brush/diagonal3 [Direction] [Color A] [Color B] [Color C] [Width A] [Width B] [Width C] [Offset]
//
// xs_begin
// author : '@lachlanmcdonald'
// arg : { id = '0'  name = 'Direction'  value = '0'  range = '0 5'  step = '1'  decimal = '0' }
// arg : { id = '1'  name = 'Color A'  value = '1'  range = '0 255'  step = '1'  decimal = '0' }
// arg : { id = '2'  name = 'Color B'  value = '8'  range = '0 255'  step = '1'  decimal = '0' }
// arg : { id = '3'  name = 'Color C'  value = '16'  range = '0 255'  step = '1'  decimal = '0' }
// arg : { id = '4'  name = 'Width A'  value = '2'  range = '1 256'  step = '1'  decimal = '0' }
// arg : { id = '5'  name = 'Width B'  value = '2'  range = '1 256'  step = '1'  decimal = '0' }
// arg : { id = '6'  name = 'Width C'  value = '2'  range = '1 256'  step = '1'  decimal = '0' }
// arg : { id = '7'  name = 'Offset'  value = '0'  range = '0 256'  step = '1'  decimal = '0' }
// xs_end

int direction = int(i_args[0]);
float color_a = floor(i_args[1]);
float color_b = floor(i_args[2]);
float color_c = floor(i_args[3]);
float width_a = max(i_args[4], 1.0);
float width_b = max(i_args[5], 1.0);
float width_c = max(i_args[6], 1.0);
float offset = floor(i_args[7]);

float map(vec3 v) {
	v = floor(v);

	float x;
	float z;

	if (direction == 0) {
		x = v.x;
		z = 0.0;
	} else if (direction == 1) {
		x = v.x;
		z = v.z;
	} else if (direction == 2) {
		x = v.x;
		z = -v.z;
	} else if (direction == 3) {
		x = -v.x;
		z = 0.0;
	} else if (direction == 4) {
		x = -v.x;
		z = v.z;
	} else if (direction == 5) {
		x = -v.x;
		z = -v.z;
	}

	float f = mod(x + v.y + z - offset, width_a + width_b + width_c);

	if (f < width_a) {
		return color_a;
	} else if (f < (width_a + width_b)) {
		return color_b;
	} else {
		return color_c;
	}
}
