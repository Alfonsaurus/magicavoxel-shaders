// MIT License (MIT)
// https://github.com/lachlanmcdonald/magicavoxel-shaders
// Copyright (c) 2020 Lachlan McDonald
//
// xs case [index]

bvec3 axisMode = equal(iAxis, vec3(1.0, 1.0, 1.0));
bool noAxisMode = all(equal(iAxis, vec3(0.0, 0.0, 0.0)));

float map(vec3 v) {
	float index = voxel(v);

	if (index == 0.0) {
		vec2 xrange = v.xx;
		vec2 yrange = v.yy;
		vec2 zrange = v.zz;

		if (noAxisMode || axisMode.x) {
			xrange.x = v.x - 1.0;
			xrange.y = v.x + 1.0;
		}

		if (noAxisMode || axisMode.y) {
			yrange.x = v.y - 1.0;
			yrange.y = v.y + 1.0;
		}

		if (noAxisMode || axisMode.z) {
			zrange.x = v.z - 1.0;
			zrange.y = v.z + 1.0;
		}

		for (float x = xrange.x; x <= xrange.y; x += 1.0) {
			for (float y = yrange.x; y <= yrange.y; y += 1.0) {
				for (float z = zrange.x; z <= zrange.y; z += 1.0) {
 					float j = voxel(vec3(x, y, z));

					if (j == iColorIndex) {
						return iArgs[0];
					}
				}
			}
		}
	}

	return index;
}
